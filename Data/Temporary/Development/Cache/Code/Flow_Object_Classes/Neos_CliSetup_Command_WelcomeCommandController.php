<?php 

declare(strict_types=1);

namespace Neos\CliSetup\Command;

/*
 * This file is part of the Neos.CliSetup package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Flow\Annotations as Flow;
use Neos\Flow\Cli\CommandController;

/**
 * @Flow\Scope("singleton")
 */
class WelcomeCommandController_Original extends CommandController
{

    public function indexCommand(): void
    {
        $this->output(
            <<<EOT
            <info>
                ....######          .######
                .....#######      ...######
                .......#######   ....######
                .........####### ....######
                ....#......#######...######
                ....##.......#######.######
                ....#####......############
                ....#####  ......##########
                ....#####    ......########
                ....#####      ......######
                .#######         ........

            Welcome to Neos.
            </info>

            The following steps will help you to configure Neos:

            1. Configure the database connection:
               <info>./flow setup:database</info>
            2. Create the required database tables:
               <info>./flow doctrine:migrate</info>
            3. Configure the image handler:
               <info>./flow setup:imagehandler</info>
            4. Create an admin user:
               <info>./flow user:create --roles Administrator username password firstname lastname </info>
            5. Create your own site package or require an existing one (choose one option):
               - <info>./flow kickstart:site Vendor.Site</info>
               - <info>composer require neos/demo && ./flow flow:package:rescan</info>
            6. Import a site or create an empty one (choose one option):
               - <info>./flow site:import Neos.Demo</info>
               - <info>./flow site:import Vendor.Site</info>
               - <info>./flow site:create sitename Vendor.Site Vendor.Site:Document.HomePage</info>

            EOT
        );
    }

}

#
# Start of Flow generated Proxy code
#
/**
 * @Flow\Scope("singleton")
 * @codeCoverageIgnore
 */
class WelcomeCommandController extends WelcomeCommandController_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     *
     * Constructs the command controller
     */
    public function __construct()
    {
        if (get_class($this) === 'Neos\CliSetup\Command\WelcomeCommandController') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\CliSetup\Command\WelcomeCommandController', $this);
        parent::__construct();
        if ('Neos\CliSetup\Command\WelcomeCommandController' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'request' => 'Neos\\Flow\\Cli\\Request',
  'response' => 'Neos\\Flow\\Cli\\Response',
  'arguments' => 'Neos\\Flow\\Mvc\\Controller\\Arguments',
  'commandMethodName' => 'string',
  'objectManager' => 'Neos\\Flow\\ObjectManagement\\ObjectManagerInterface',
  'commandManager' => 'Neos\\Flow\\Cli\\CommandManager',
  'output' => 'Neos\\Flow\\Cli\\ConsoleOutput',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'Neos\CliSetup\Command\WelcomeCommandController') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\CliSetup\Command\WelcomeCommandController', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->injectCommandManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Cli\CommandManager'));
        $this->injectObjectManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\ObjectManagement\ObjectManagerInterface'));
        $this->Flow_Injected_Properties = array (
  0 => 'commandManager',
  1 => 'objectManager',
);
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.CliSetup/Classes/Command/WelcomeCommandController.php
#