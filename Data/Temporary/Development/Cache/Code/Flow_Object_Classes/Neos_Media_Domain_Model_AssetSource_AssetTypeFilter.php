<?php 
namespace Neos\Media\Domain\Model\AssetSource;

/*
 * This file is part of the Neos.Media package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
  *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

class AssetTypeFilter_Original implements \JsonSerializable
{
    /**
     * @var string
     */
    private $assetType;

    /**
     * AssetType constructor.
     *
     * @param string $assetType
     */
    public function __construct(string $assetType)
    {
        if (!in_array($assetType, self::getAllowedValues(), true)) {
            throw new \InvalidArgumentException(sprintf('Invalid asset type "%s", allowed values are: "%s".', $assetType, implode('", "', self::getAllowedValues())), 1524130064);
        }
        $this->assetType = $assetType;
    }

    /**
     * @return string[]
     */
    public static function getAllowedValues(): array
    {
        return ['All', 'Image', 'Document', 'Video', 'Audio'];
    }

    /**
     * @return string
     */
    public function getAssetType(): string
    {
        return $this->assetType;
    }

    /**
     * @return string
     */
    public function __toString(): string
    {
        return $this->assetType;
    }

    /**
     * @return string
     */
    public function jsonSerialize(): string
    {
        return $this->assetType;
    }
}

#
# Start of Flow generated Proxy code
#

final class AssetTypeFilter extends AssetTypeFilter_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     *
     * AssetType constructor.
     *
     * @param string $assetType
     */
    public function __construct()
    {
        $arguments = func_get_args();
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $assetType in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) â€“ for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        parent::__construct(...$arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'assetType' => 'string',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.Media/Classes/Domain/Model/AssetSource/AssetTypeFilter.php
#