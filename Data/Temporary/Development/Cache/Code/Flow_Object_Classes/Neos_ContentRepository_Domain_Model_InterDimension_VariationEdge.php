<?php 
namespace Neos\ContentRepository\Domain\Model\InterDimension;

/*
 * This file is part of the Neos.ContentRepository package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

/**
 * The variation edge domain model
 * May serve as a fallback edge for variants or as a variant edge for fallbacks
 */
class VariationEdge_Original
{
    /**
     * @var ContentSubgraph
     */
    protected $variant;

    /**
     * @var ContentSubgraph
     */
    protected $fallback;

    /**
     * @var array
     */
    protected $weight;

    /**
     * @param ContentSubgraph $variant
     * @param ContentSubgraph $fallback
     * @param array $weight
     */
    public function __construct(ContentSubgraph $variant, ContentSubgraph $fallback, array $weight)
    {
        $this->variant = $variant;
        $this->fallback = $fallback;
        $this->weight = $weight;
        $variant->registerFallbackEdge($this);
        $fallback->registerVariantEdge($this);
    }

    /**
     * @return ContentSubgraph
     */
    public function getVariant(): ContentSubgraph
    {
        return $this->variant;
    }

    /**
     * @return ContentSubgraph
     */
    public function getFallback(): ContentSubgraph
    {
        return $this->fallback;
    }

    /**
     * @return array
     */
    public function getWeight(): array
    {
        return $this->weight;
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * The variation edge domain model
 * May serve as a fallback edge for variants or as a variant edge for fallbacks
 * @codeCoverageIgnore
 */
class VariationEdge extends VariationEdge_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     *
     * @param ContentSubgraph $variant
     * @param ContentSubgraph $fallback
     * @param array $weight
     */
    public function __construct()
    {
        $arguments = func_get_args();

        if (!array_key_exists(0, $arguments)) $arguments[0] = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\ContentRepository\Domain\Model\InterDimension\ContentSubgraph');
        if (!array_key_exists(1, $arguments)) $arguments[1] = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\ContentRepository\Domain\Model\InterDimension\ContentSubgraph');
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $variant in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) – for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        if (!array_key_exists(1, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $fallback in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) – for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        if (!array_key_exists(2, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $weight in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) – for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        parent::__construct(...$arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'variant' => 'Neos\\ContentRepository\\Domain\\Model\\InterDimension\\ContentSubgraph',
  'fallback' => 'Neos\\ContentRepository\\Domain\\Model\\InterDimension\\ContentSubgraph',
  'weight' => 'array',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.ContentRepository/Classes/Domain/Model/InterDimension/VariationEdge.php
#