<?php 
declare(strict_types=1);

namespace Neos\SiteKickstarter\Service;

/*
 * This file is part of the Neos.SiteKickstarter package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Flow\Annotations as Flow;

class FusionRecursiveDirectoryRenderer_Original
{
    /**
     * @Flow\Inject
     * @var SimpleTemplateRenderer
     */
    protected $simpleTemplateRenderer;

    /**
     * Renders whole directory recursivly
     *
     * @param string $srcDirectory
     * @param string $targetDirectory
     * @param array $variables
     * @throws \Neos\Utility\Exception\FilesException
     */
    public function renderDirectory(string $srcDirectory, string $targetDirectory, array $variables)
    {
        $files = scandir($srcDirectory);

        foreach ($files as $key => $value) {
            $path = realpath($srcDirectory . DIRECTORY_SEPARATOR . $value);

            $targetPath = $targetDirectory . DIRECTORY_SEPARATOR . $value;

            if (!is_dir($path)) {
                $compiledFile = $this->simpleTemplateRenderer->render($path, $variables);
                if (!is_dir(dirname($targetPath))) {
                    \Neos\Utility\Files::createDirectoryRecursively(dirname($targetPath));
                }
                file_put_contents($targetPath, $compiledFile);
            } elseif ($value != "." && $value != "..") {
                $this->renderDirectory($path, $targetPath, $variables);
            }
        }
    }
}

#
# Start of Flow generated Proxy code
#

class FusionRecursiveDirectoryRenderer extends FusionRecursiveDirectoryRenderer_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if ('Neos\SiteKickstarter\Service\FusionRecursiveDirectoryRenderer' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'simpleTemplateRenderer' => 'Neos\\SiteKickstarter\\Service\\SimpleTemplateRenderer',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->simpleTemplateRenderer = new \Neos\SiteKickstarter\Service\SimpleTemplateRenderer();
        $this->Flow_Injected_Properties = array (
  0 => 'simpleTemplateRenderer',
);
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.SiteKickstarter/Classes/Service/FusionRecursiveDirectoryRenderer.php
#