<?php 
declare(strict_types=1);

namespace Neos\Neos\Security;

/*
 * This file is part of the Neos.Neos package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Flow\Annotations as Flow;
use Neos\Flow\Aop\JoinPointInterface;
use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
use Neos\Neos\Service\ImpersonateService;

/**
 * An aspect which centralizes the logging of security relevant actions.
 *
 * @Flow\Scope("singleton")
 * @Flow\Aspect
 */
class ImpersonateAspect_Original
{
    /**
     * @var bool
     */
    protected bool $alreadyLoggedAuthenticateCall = false;

    /**
     * @var ImpersonateService
     * @Flow\Inject
     */
    protected $impersonateService;

    /**
     * @Flow\After("within(Neos\Flow\Security\Authentication\AuthenticationManagerInterface) && method(.*->authenticate())")
     * @param JoinPointInterface $joinPoint The current joinpoint
     * @return void
     * @throws \Exception
     */
    public function logManagerAuthenticate(JoinPointInterface $joinPoint): void
    {
        /** @var AuthenticationManagerInterface $proxy */
        $proxy = $joinPoint->getProxy();

        if ($this->alreadyLoggedAuthenticateCall === true) {
            $this->alreadyLoggedAuthenticateCall = true;
            return;
        }
        if ($proxy->getSecurityContext()->getAccount() === null) {
            $this->alreadyLoggedAuthenticateCall = true;
            return;
        }

        if ($this->impersonateService && $this->impersonateService->isActive()) {
            $impersonation = $this->impersonateService->getImpersonation();
            foreach ($proxy->getSecurityContext()->getAuthenticationTokens() as $token) {
                $token->setAccount($impersonation);
            }
        }

        $this->alreadyLoggedAuthenticateCall = true;
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * An aspect which centralizes the logging of security relevant actions.
 *
 * @Flow\Scope("singleton")
 * @Flow\Aspect
 * @codeCoverageIgnore
 */
class ImpersonateAspect extends ImpersonateAspect_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if (get_class($this) === 'Neos\Neos\Security\ImpersonateAspect') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Security\ImpersonateAspect', $this);
        if ('Neos\Neos\Security\ImpersonateAspect' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'alreadyLoggedAuthenticateCall' => 'boolean',
  'impersonateService' => 'Neos\\Neos\\Service\\ImpersonateService',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'Neos\Neos\Security\ImpersonateAspect') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Security\ImpersonateAspect', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->impersonateService = new \Neos\Neos\Service\ImpersonateService();
        $this->Flow_Injected_Properties = array (
  0 => 'impersonateService',
);
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.Neos/Classes/Security/ImpersonateAspect.php
#