<?php 
namespace Neos\Form\Core\Model;

/*
 * This file is part of the Neos.Form package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Form\Core\Runtime\FormRuntime;

/**
 * The context that is passed to each finisher when executed.
 * It acts like an EventObject that is able to stop propagation.
 *
 * **This class is not meant to be subclassed by developers.**
 */
class FinisherContext_Original
{
    /**
     * If TRUE further finishers won't be invoked
     *
     * @var boolean
     * @internal
     */
    protected $cancelled = false;

    /**
     * A reference to the Form Runtime that the finisher belongs to
     *
     * @var \Neos\Form\Core\Runtime\FormRuntime
     * @internal
     */
    protected $formRuntime;

    /**
     * @param \Neos\Form\Core\Runtime\FormRuntime $formRuntime
     * @internal
     */
    public function __construct(FormRuntime $formRuntime)
    {
        $this->formRuntime = $formRuntime;
    }

    /**
     * Cancels the finisher invocation after the current finisher
     *
     * @return void
     * @api
     */
    public function cancel()
    {
        $this->cancelled = true;
    }

    /**
     * TRUE if no futher finishers should be invoked. Defaults to FALSE
     *
     * @return boolean
     * @internal
     */
    public function isCancelled()
    {
        return $this->cancelled;
    }

    /**
     * The Form Runtime that is associated with the current finisher
     *
     * @return \Neos\Form\Core\Runtime\FormRuntime
     * @api
     */
    public function getFormRuntime()
    {
        return $this->formRuntime;
    }

    /**
     * The values of the submitted form (after validation and property mapping)
     *
     * @return array
     * @api
     */
    public function getFormValues()
    {
        return $this->formRuntime->getFormState()->getFormValues();
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * The context that is passed to each finisher when executed.
 * It acts like an EventObject that is able to stop propagation.
 *
 * **This class is not meant to be subclassed by developers.**
 * @codeCoverageIgnore
 */
class FinisherContext extends FinisherContext_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     *
     * @param \Neos\Form\Core\Runtime\FormRuntime $formRuntime
     * @internal
     */
    public function __construct()
    {
        $arguments = func_get_args();

        if (!array_key_exists(0, $arguments)) $arguments[0] = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Form\Core\Runtime\FormRuntime');
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $formRuntime in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) â€“ for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        parent::__construct(...$arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'cancelled' => 'boolean',
  'formRuntime' => '\\Neos\\Form\\Core\\Runtime\\FormRuntime',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.Form/Classes/Core/Model/FinisherContext.php
#