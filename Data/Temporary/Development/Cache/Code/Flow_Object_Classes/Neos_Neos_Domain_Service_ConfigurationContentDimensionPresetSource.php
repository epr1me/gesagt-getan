<?php 
namespace Neos\Neos\Domain\Service;

/*
 * This file is part of the Neos.Neos package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Flow\Annotations as Flow;

/**
 * A Dimension Preset Source that gets presets from settings
 *
 * Everything is configured in Settings.yaml in path "Neos.ContentRepository.contentDimensions".
 * @Flow\Scope("singleton")
 */
class ConfigurationContentDimensionPresetSource_Original extends \Neos\ContentRepository\Domain\Service\ConfigurationContentDimensionPresetSource implements ContentDimensionPresetSourceInterface
{
    /**
     * {@inheritdoc}
     */
    public function findPresetByUriSegment($dimensionName, $uriSegment)
    {
        if (isset($this->configuration[$dimensionName])) {
            foreach ($this->configuration[$dimensionName]['presets'] as $presetIdentifier => $presetConfiguration) {
                if (isset($presetConfiguration['uriSegment']) && $presetConfiguration['uriSegment'] === $uriSegment) {
                    $presetConfiguration['identifier'] = $presetIdentifier;
                    return $presetConfiguration;
                }
            }
        }
        return null;
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * A Dimension Preset Source that gets presets from settings
 *
 * Everything is configured in Settings.yaml in path "Neos.ContentRepository.contentDimensions".
 * @Flow\Scope("singleton")
 * @codeCoverageIgnore
 */
class ConfigurationContentDimensionPresetSource extends ConfigurationContentDimensionPresetSource_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource', $this);
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\ContentRepository\Domain\Service\ContentDimensionPresetSourceInterface', $this);
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\Service\ContentDimensionPresetSourceInterface', $this);
        if ('Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'configuration' => 'array',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource', $this);
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\ContentRepository\Domain\Service\ContentDimensionPresetSourceInterface', $this);
        if (get_class($this) === 'Neos\Neos\Domain\Service\ConfigurationContentDimensionPresetSource') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\Service\ContentDimensionPresetSourceInterface', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->setConfiguration(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get(\Neos\Flow\Configuration\ConfigurationManager::class)->getConfiguration('Settings', 'Neos.ContentRepository.contentDimensions'));
        $this->Flow_Injected_Properties = array (
  0 => 'configuration',
);
    }
}
# PathAndFilename: /Applications/MAMP/htdocs/neos-example/Packages/Application/Neos.Neos/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php
#